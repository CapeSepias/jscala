{"name":"JScala","tagline":"Scala macro that produces JavaScript from Scala code.","body":"JScala\r\n======\r\n\r\nScala macro that produces JavaScript from Scala code.\r\n\r\n\r\nSupported Features:\r\n===================\r\n* Variable definitions, basic unary and binary operations\r\n* Named and anonymous functions\r\n* Scala Arrays as Javascript Array literals\r\n* Scala mutable/immutable Map as Javascript object\r\n* Scala anonymous classes as Javascript objects\r\n* if, while, for..in and for statements\r\n* Global Javascript functions (parseInt etc)\r\n* Basic Browser objects (window, history, location etc)\r\n* Basic HTML DOM objects (Document, Element, Attribute, Node, NodeList etc)\r\n* Raw Javascript inclusion\r\n* Generated Javascript eval using Java ScriptEngine\r\n* Pretty printing and compression using YUI compressor\r\n\r\nExamples\r\n========\r\n\r\nThis Scala code\r\n\r\n```scala\r\nval js = javascript {\r\n  window.setTimeout(() => {\r\n    val r = new RegExp(\"d.*\", \"g\")\r\n    def func(i: String) = r.exec(i)\r\n    val list = document.getElementById(\"myList2\")\r\n    val map = collection.mutable.Map[String, String]()\r\n    if (typeof(map) == \"string\") {\r\n      for (idx <- 0 until list.attributes.length) {\r\n        val attr = list.attributes.item(idx).asInstanceOf[Attribute]\r\n        map(attr.name) = func(attr.textContent).asInstanceOf[String]\r\n      }\r\n    } else {\r\n      val obj = new {\r\n        val field = 1\r\n        def func2(i: Int) = \"string\"\r\n      }\r\n      val links = Array(\"https://github.com/nau/scala\")\r\n      for (link <- links) {\r\n        include(\"var raw = 'JavaScript'\")\r\n        console.log(link + obj.func2(obj.field))\r\n      }\r\n      window.location.href = links(0).replace(\"scala\", \"jscala\")\r\n    }\r\n  }, 1000)\r\n}\r\nprintln(js.asString)\r\n```\r\n\r\nwill print\r\n\r\n```javascript\r\nwindow.setTimeout((function () {\r\n    var r = new RegExp(\"d.*\", \"g\");\r\n    function func(i) {\r\n      return r.exec(i);\r\n    };\r\n    var list = document.getElementById(\"myList2\");\r\n    var map = {};\r\n    if ((typeof(map)) == \"string\") for (var idx = 0; idx < (list.attributes.length); idx++) {\r\n      var attr = list.attributes.item(idx);\r\n      (map[attr.name]) = func(attr.textContent)\r\n    } else {\r\n      var obj = { field: 1,\r\n                  func2: (function (i) {\r\n                      return \"string\";\r\n                    })};\r\n      var links = [\"https://github.com/nau/scala\"];\r\n      for (link in links) {\r\n        var raw = 'JavaScript';\r\n        console.log((link) + obj.func2(obj.field))\r\n      };\r\n      window.location.href = links[0].replace(\"scala\", \"jscala\")\r\n    }\r\n  }), 1000)\r\n```\r\n      \r\nHow To Use\r\n==========\r\n\r\nIn your build.sbt add\r\n\r\n    scalaVersion := \"2.10.2\"\r\n\r\n    resolvers += \"nau-releases\" at \"http://nau.github.com/maven-repo/releases\"\r\n\r\n    libraryDependencies += \"org.jscala\" %% \"jscala-macros\" % \"0.1\"\r\n\r\n    libraryDependencies += \"com.yahoo.platform.yui\" % \"yuicompressor\" % \"2.4.7\"\r\n    \r\nIf you want to try the latest snapshot:\r\n\r\n    scalaVersion := \"2.10.2\"\r\n\r\n    resolvers += Resolver.sonatypeRepo(\"snapshots\")\r\n\r\n    libraryDependencies += \"org.jscala\" %% \"jscala-macros\" % \"0.2-SNAPSHOT\"\r\n\r\n    libraryDependencies += \"com.yahoo.platform.yui\" % \"yuicompressor\" % \"2.4.7\"\r\n\r\nIn your code\r\n\r\n```scala\r\nimport org.jscala._\r\nval js = javascript { ... }\r\nprintln(js.asString)\r\nprintln(js.compress)\r\nprintln(js.eval())\r\n```\r\n    \r\nThat's it!\r\n\r\nFeedback\r\n========\r\n\r\nAny feedback is very welcome!\r\n\r\nYou can use [JScala mailing list](https://groups.google.com/forum/#!forum/jscala-user) if you have any questions.\r\n","google":"UA-731086-4","note":"Don't delete this file! It's used internally to help with page regeneration."}